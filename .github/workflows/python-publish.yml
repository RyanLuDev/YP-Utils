name: Publish PyPi

on:
  release:
    types: [published]

  push:
    tags:
      - 'v*'
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          submodules: 'recursive'
      
      - name: Build Wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
            CIBW_BUILD_FRONTEND: build
            CIBW_SKIP: "*-win32 *-manylinux_i686 pp*"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
    
  build_sdist:
      name: Build Source Distribution
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Build sdist
          run: pipx run build --sdist            
        - uses: actions/upload-artifact@v4
          with:
            name: cibw-sdist
            path: dist/*.tar.gz
    
  upload:
      needs: [build_wheels, build_sdist]
      runs-on: ubuntu-latest
      environment: pypi
      permissions:
        id-token: write
      steps:
        - uses: actions/download-artifact@v4
          with:
            pattern: cibw-*
            path: dist
            merge-multiple: true
            #- name: Publish to test pypi
            
        - name: Publish to pypi
                #if: github.event_name == 'release' && github.event.action == 'published     
          if: startsWith(github.ref, 'refs/tags')
          uses: pypa/gh-action-pypi-publish@master
          with:
            package-dir: dist/
                    #user: __token__
            password: ${{ secrets.PYPI_API_TOKEN }}      
